[tool.poetry]
name = "wordle-solver"
description = "script for solving wordle puzzle"
version = "0.1.0"
authors = [
    "Vassiliy Taranov <taranov.vv@gmail.com>",
]
license = "LGPL"
readme = "README.md"
homepage = "https://github.com/oriontvv/wordle-solver"
repository = "https://github.com/oriontvv/wordle-solver"
documentation = "https://github.com/oriontvv/wordle-solver"
keywords = [
    "wordle",
    "puzzle",
    "solver",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Topic :: Games/Entertainment",
    "Topic :: Games/Entertainment :: Puzzle Games",
    "Topic :: Utilities",
]
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
python-telegram-bot = "13.0,<20.0"
python-dotenv = "^0.21"

[tool.poetry.dev-dependencies]
coveralls = { version = "^3.3.1", extras = [ "toml" ]}
mypy = "^1.2"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-deadfixtures = "^2.2.1"


[tool.poetry.group.dev.dependencies]
black = {version = "^23.3", allow-prereleases = true}
ruff = "^0.0.263"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


[tool.ruff]
line-length = 120
ignore = ["T201", "I001", "B905"]
select = ["A", "B", "C", "E", "F", "N", "T", "UP", "I"]
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.mypy]
ignore_missing_imports = true

[tool.pytest]
addopts = "--ignore=py3 --ignore=build"


[tool.coverage.run]
relative_files = true
omit = [
    "src/bot.py",
    "src/cli_app.py",
]


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
